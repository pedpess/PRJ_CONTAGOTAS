package com.contagotas.data.DAO;

import com.contagotas.data.DAO.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table DETALHE_GASTOS.
 */
public class DetalheGastos {

    private Long id;
    private Long media_gastos_id;
    private Integer maquina;
    private Integer tanque;
    private Integer privada;
    private Integer torneira;
    private Integer chuveiro;
    private Integer pia;
    private Integer lava_louca;
    private String deleted;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient DetalheGastosDao myDao;

    private MediaGastos mediaGastos;
    private Long mediaGastos__resolvedKey;


    public DetalheGastos() {
    }

    public DetalheGastos(Long id) {
        this.id = id;
    }

    public DetalheGastos(Long id, Long media_gastos_id, Integer maquina, Integer tanque, Integer privada, Integer torneira, Integer chuveiro, Integer pia, Integer lava_louca, String deleted) {
        this.id = id;
        this.media_gastos_id = media_gastos_id;
        this.maquina = maquina;
        this.tanque = tanque;
        this.privada = privada;
        this.torneira = torneira;
        this.chuveiro = chuveiro;
        this.pia = pia;
        this.lava_louca = lava_louca;
        this.deleted = deleted;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getDetalheGastosDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getMedia_gastos_id() {
        return media_gastos_id;
    }

    public void setMedia_gastos_id(Long media_gastos_id) {
        this.media_gastos_id = media_gastos_id;
    }

    public Integer getMaquina() {
        return maquina;
    }

    public void setMaquina(Integer maquina) {
        this.maquina = maquina;
    }

    public Integer getTanque() {
        return tanque;
    }

    public void setTanque(Integer tanque) {
        this.tanque = tanque;
    }

    public Integer getPrivada() {
        return privada;
    }

    public void setPrivada(Integer privada) {
        this.privada = privada;
    }

    public Integer getTorneira() {
        return torneira;
    }

    public void setTorneira(Integer torneira) {
        this.torneira = torneira;
    }

    public Integer getChuveiro() {
        return chuveiro;
    }

    public void setChuveiro(Integer chuveiro) {
        this.chuveiro = chuveiro;
    }

    public Integer getPia() {
        return pia;
    }

    public void setPia(Integer pia) {
        this.pia = pia;
    }

    public Integer getLava_louca() {
        return lava_louca;
    }

    public void setLava_louca(Integer lava_louca) {
        this.lava_louca = lava_louca;
    }

    public String getDeleted() {
        return deleted;
    }

    public void setDeleted(String deleted) {
        this.deleted = deleted;
    }

    /** To-one relationship, resolved on first access. */
    public MediaGastos getMediaGastos() {
        Long __key = this.media_gastos_id;
        if (mediaGastos__resolvedKey == null || !mediaGastos__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            MediaGastosDao targetDao = daoSession.getMediaGastosDao();
            MediaGastos mediaGastosNew = targetDao.load(__key);
            synchronized (this) {
                mediaGastos = mediaGastosNew;
            	mediaGastos__resolvedKey = __key;
            }
        }
        return mediaGastos;
    }

    public void setMediaGastos(MediaGastos mediaGastos) {
        synchronized (this) {
            this.mediaGastos = mediaGastos;
            media_gastos_id = mediaGastos == null ? null : mediaGastos.getId();
            mediaGastos__resolvedKey = media_gastos_id;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
